// Generated by Dagger (https://dagger.dev).
package com.example.dagger2learning.car;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Wheels_Factory implements Factory<Wheels> {
  private final Provider<Rims> rimsProvider;

  private final Provider<Tires> tiresProvider;

  public Wheels_Factory(Provider<Rims> rimsProvider, Provider<Tires> tiresProvider) {
    this.rimsProvider = rimsProvider;
    this.tiresProvider = tiresProvider;
  }

  @Override
  public Wheels get() {
    return newInstance(rimsProvider.get(), tiresProvider.get());
  }

  public static Wheels_Factory create(Provider<Rims> rimsProvider, Provider<Tires> tiresProvider) {
    return new Wheels_Factory(rimsProvider, tiresProvider);
  }

  public static Wheels newInstance(Rims rims, Tires tires) {
    return new Wheels(rims, tires);
  }
}
